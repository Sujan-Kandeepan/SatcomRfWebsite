@model SatcomRfWebsite.Models.CalibrationData

@{
    ViewBag.Title = "Create";
}

<script>
    function setURL(value) {
        if (value == "default") {
            location.href = location.origin + "/Calibration/Create";
        } else {
            location.href = location.origin + "/Calibration/Create/" + value.replace(" ", "");
        }
    }

    function index(value) {
        if (value == "default") {
            location.href = location.origin + "/Calibration";
        } else {
            location.href = location.origin + "/Calibration/Index/" + value.replace(" ", "");
        }
    }
</script>

<div class="page-header row">
    <div class="col-lg-10">
        <h1>Submit Calibration Data</h1>
    </div>
    <div class="col-lg-2" style="margin-top: 30px">
        @if (!Request.Url.ToString().Replace("/", "").EndsWith("Create"))
        {
            <btn class="btn btn-default btn-block" id="reset-form">Reset form</btn>
        }
    </div>
</div>
<div class="row">
    <div class="col-md-5" style="margin-top: -20px">
        <div class="display">
            <h3>Submit new calibration record to database.</h3>
        </div>
    </div>
    <div class="col-md-3">
        <select class="form-control" id="cal-type" onchange="setURL(this.value)">
            <option value="default">Select a device type</option>
            <option value="Attenuator" @(Request.Url.ToString().Contains("Attenuator") ? "selected" : "" )>Attenuator</option>
            <option value="Output Coupler" @(Request.Url.ToString().Contains("OutputCoupler") ? "selected" : "" )>Output Coupler</option>
            <option value="Power Sensor" @(Request.Url.ToString().Contains("PowerSensor") ? "selected" : "" )>Power Sensor</option>
        </select>
    </div>
    <div class="col-md-2">
        <label class="form-control btn btn-info @(Request.Url.ToString().Replace("/", "").EndsWith("Create") ? "disabled" : "" )" id="import-file"><span id="import-msg">Import calibration file</span><input type="file" id="file-browser" style="display: none;" @(Request.Url.ToString().Replace("/", "").EndsWith("Create") ? "disabled" : "" )></label>
    </div>
    <div class="col-md-2">
        <button class="form-control btn btn-primary" id="index" onclick="index($('#cal-type').val())">Go to index</button>
    </div>
</div>

@using (Html.BeginForm())
{
    if (Request.Url.ToString().Contains("Attenuator"))
    {
        @Html.Partial("ATCalForm")
    }

    if (Request.Url.ToString().Contains("OutputCoupler"))
    {
        @Html.Partial("OCCalForm")
    }

    if (Request.Url.ToString().Contains("PowerSensor"))
    {
        @Html.Partial("PSCalForm")
    }
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://terrylinooo.github.io/jquery.disableAutoFill/assets/js/jquery.disableAutoFill.min.js"></script>
<script>
    $(document).ready(function () {
        $('form').disableAutoFill();

        $(".datepicker").datepicker({
            format: 'mm/dd/yyyy',
            changeMonth: true,
            changeYear: true
        });

        $("#reset-form").click(function () {
            $("form input").val("");
            $("#DataFields").html('<span style="color: grey">Form fields to enter calfactor records will appear here</span>');
        });

        $("input:text,form").click(function () {
            $(this).attr("autocomplete", "off");
        });

        $("input:file").on("change", function () {
            $("#import-msg").html('Getting form data...');
            $("#file-browser").prop("disabled", true);
            $("form input").prop("disabled", true);

            if ($(this).prop("files").length > 0 && window.FormData !== undefined) {
                var file = $(this).prop("files")["files" in $(this) ? $(this).prop("files").length - 1 : 0];
                var data = new FormData();
                data.append('file', file);

                $.ajax({
                    type: "post",
                    url: "/Calibration/ImportFile?type=" + $("#cal-type").val().replace(" ", ""),
                    data: data,
                    contentType: false,
                    processData: false,
                    success: function (result) {
                        if (result == "Fail") {
                            $("#import-msg").html('Import calibration file');
                            $("#file-browser").prop("disabled", false);
                            $("form input").prop("disabled", false);
                            
                            alert("Could not parse file!");
                            return;
                        }

                        var fields = JSON.parse(result);
                        if ($("#cal-type").val() == "Attenuator" || $("#cal-type").val() == "Output Coupler") {
                            var calDateReturned = fields.CalDate.substring(0, fields.CalDate.indexOf("T"));
                            var calDatePieces = calDateReturned.split('-');
                            var calDate = calDatePieces[1] + "/" + calDatePieces[2] + "/" + calDatePieces[0];

                            var expireDateReturned = fields.ExpireDate.substring(0, fields.ExpireDate.indexOf("T"));
                            var expireDatePieces = expireDateReturned.split('-');
                            var expireDate = expireDatePieces[1] + "/" + expireDatePieces[2] + "/" + expireDatePieces[0];

                            $("#AssetNumber").val(fields.AssetNumber);
                            $("#Operator").val(fields.Operator);
                            $("#CalDate").val(calDate);
                            $("#StartFreq").val(fields.StartFreq);
                            $("#StopFreq").val(fields.StopFreq);
                            $("#ExpireDate").val(expireDate);
                            $("#Loss").val(fields.Loss);
                            $("#Power").val(fields.Power);
                            $("#MaxOffset").val(fields.MaxOffset);
                            $("#Temp").val(fields.Temp);
                            $("#Humidity").val(fields.Humidity);
                            $("#Lookback").val(fields.Lookback);
                            $("#Points").val(fields.Records.length);
                        } else if ($("#cal-type").val() == "Power Sensor") {
                            var dateReturned = fields.CalDate.substring(0, fields.CalDate.indexOf("T"));
                            var pieces = dateReturned.split('-');
                            var date = pieces[1] + "/" + pieces[2] + "/" + pieces[0];

                            $("#AssetNumber").val(fields.AssetNumber);
                            $("#Operator").val(fields.Operator);
                            $("#CalDate").val(date);
                            $("#Series").val(fields.Series);
                            $("#Serial").val(fields.Serial);
                            $("#RefCal").val(fields.RefCal);
                            $("#Certificate").val(fields.Certificate);
                            $("#Points").val(fields.Records.length);
                        }

                        $.ajax({
                            type: "post",
                            url: "/Calibration/CreateDataFields",
                            data: { "num": $("#Points").val() > 0 ? $("#Points").val() : 0, "returnloss": document.URL.indexOf("PowerSensor") == -1 ? true : false },
                            dataType: "text",
                            success: function (result) {
                                $("#DataFields").html(result);
                                $("#import-msg").html('Import calibration file');
                                $("#file-browser").prop("disabled", false);
                                $("form input").prop("disabled", false);

                                setTimeout(function () {
                                    for (var i = 0; i < fields.Records.length; i++) {
                                        var record = fields.Records[i];
                                        $("#Records_" + i.toString() + "__Frequency").val(record.Frequency.toString());
                                        $("#Records_" + i.toString() + "__CalFactor").val(record.CalFactor.toString());
                                    }
                                }, 0);
                            },
                            error: function (xhr, status, error) {
                                $("#DataFields").html(xhr.responseText);
                                $("#import-msg").html('Import calibration file');
                                $("#file-browser").prop("disabled", false);
                                $("form input").prop("disabled", false);
                            }
                        });
                    },
                    error: function (xhr, status, p3, p4) {
                        $("#import-msg").html('Import calibration file');
                        $("#file-browser").prop("disabled", false);
                        $("form input").prop("disabled", false);

                        var err = "Error " + " " + status + " " + p3 + " " + p4;
                        if (xhr.responseText && xhr.responseText[0] == "{")
                            err = JSON.parse(xhr.responseText).Message;
                        alert("Something went wrong!");
                    }
                });
            } else {
                alert("This browser does not support file uploads!");
            }
            $(this).val("");
        });

        $("#Points").on("input change", function() {
            if ($("#Points").val().length > 3) {
                $("#Points").val($("#Points").val().substring(0, 3));
            }

            $.ajax({
                type: "post",
                url: "/Calibration/CreateDataFields",
                data: { "num": $("#Points").val() > 0 ? $("#Points").val() : 0, "returnloss": document.URL.indexOf("PowerSensor") == -1 ? true : false },
                dataType: "text",
                success: function (result) {
                    $("#DataFields").html(result);
                },
                error: function(xhr, status, error) {
                    $("#DataFields").html(xhr.responseText);
                }
            });
        });
    });
</script>