@model SatcomRfWebsite.Models.tblATCalHeaders

<div class="form-horizontal row">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-md-6">
        <div class="form-group row" style="margin-top: -10px">
            <div class="col-md-4">
                @Html.Label("AssetNumber", "Asset Number", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.AssetNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssetNumber, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("Operator", "Operator", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Operator, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Operator, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("CalDate", "Calibration Date", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CalDate, new { htmlAttributes = new { @class = "form-control", @min = "0", @max = "999" } })
                @Html.ValidationMessageFor(model => model.CalDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" style="margin-top: -10px">
            <div class="col-md-4">
                @Html.Label("StartFreq", "Start Frequency", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.StartFreq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartFreq, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("StopFreq", "Stop Frequency", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.StopFreq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StopFreq, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("ExpireDate", "Expire Date", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.ExpireDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.ExpireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" style="margin-top: -10px">
            <div class="col-md-4">
                @Html.Label("Loss", "Loss", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Loss, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Loss, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("Power", "Power", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Power, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Power, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("MaxOffset", "Max Offset", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.MaxOffset, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MaxOffset, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row" style="margin-top: -10px">
            <div class="col-md-4">
                @Html.Label("Temp", "Temperature", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Temp, new { htmlAttributes = new { @class = "form-control", @placeholder = "Optional" } })
                @Html.ValidationMessageFor(model => model.Temp, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("Humidity", "Humidity", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Humidity, new { htmlAttributes = new { @class = "form-control", @placeholder = "Optional" } })
                @Html.ValidationMessageFor(model => model.Humidity, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.Label("Lookback", "Lookback", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Lookback, new { htmlAttributes = new { @class = "form-control", @placeholder = "Optional" } })
                @Html.ValidationMessageFor(model => model.Lookback, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-top: -10px">
            <div class="col-md-4"></div>
            <div class="col-md-4">
                @Html.Label("Points", "Number Of Points", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control", @min = "0", @max = "999" } })
                @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4" style="margin-top: 27px">
                <input type="submit" value="Submit To Database" class="btn btn-success btn-block" />
            </div>
        </div>
    </div>
    <div class="col-md-6 text-center" id="DataFields" style="margin-top: -10px; border-left: 1px solid #eeeeee; height: 325px; overflow-y: auto"><span style="color: grey">Form fields to enter calfactor records will appear here</span></div>
</div>