@model SatcomRfWebsite.Models.AteOutputTopViewModel

@{
    ViewBag.Title = "ATE Output Detail";
}

<script>
    var statsURL = "SatcomStatsPage/Index/@Model.tools.getProdTypeFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)/@Model.tools.getModelNameFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)";
    document.getElementById("navBarStats").innerHTML = "<a href=\"" + document.getElementById("absolute-base-url").innerHTML + statsURL + "\">Statistics</a>";

    var outputURL = "ateData/AteOutput?filter=pT=@Model.tools.getProdTypeFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)%mN=@Model.tools.getModelNameFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)%ser=na%testType=na%tubeName=na%opt=na";
    document.getElementById("navBarAteOutput").innerHTML = "<a href=\"" + document.getElementById("absolute-base-url").innerHTML + outputURL + "\">ATE Output</a>";

    var resultsURL = "testsData/TestResults/@Model.tools.getProdTypeFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)/@Model.tools.getModelNameFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)/testName=none+testType=none+tubeName=none+opt=none";
    document.getElementById("navBarTests").innerHTML = "<a href=\"" + document.getElementById("absolute-base-url").innerHTML + resultsURL + "\">Test Results</a>";
</script>

<div class="container">

    <div class="row">
        <div class="row page-header">
            <h1 class="col-lg-9">Details For The Serial # @Model.ateOutputModel.serialNum</h1>
            <button class="col-lg-2 btn btn-info center-block" style="margin-top: 25px" onclick="location.href = '@Url.Action("", "", null, Request.Url.Scheme)/serialnumbers?beginning=@Model.ateOutputModel.serialNum&findby=serial'">View in serial numbers list</button>
            <div class="col-lg-1"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3"><h4>Product Type</h4></div>
        <div class="col-sm-3"><h4>Model Name</h4></div>
        <div class="col-sm-3"><h4>Long Model Name</h4></div>
        <div class="col-sm-3"><h4>Sales Order</h4></div>
    </div>
    <div class="row">
        <div class="col-sm-3"><i>@Model.tools.getProdTypeFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)</i></div>
        <div class="col-sm-3"><i>@Model.tools.getModelNameFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)</i></div>
        <div class="col-sm-3"><i>@Model.ateOutputModel.ateOutput[0].LongModelName</i></div>
        <div class="col-sm-3"><i>@Model.ateOutputModel.ateOutput[0].SalesOrder</i></div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="row">
                <div class="col-sm-6"><h4>Test Type</h4></div>
                <div class="col-sm-6"><h4>Tested On</h4></div>
            </div>
            <div class="row">
                <div class="col-sm-6"><i>@Model.ateOutputModel.ateOutput[0].TestType</i></div>
                <div class="col-sm-6"><i>@Model.ateOutputModel.ateOutput[0].StartTime</i></div>
            </div>
        </div>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js"></script>
        <script>
            new ClipboardJS('.btn');
            var requestpath = "file:///P:\\OutputData\\@Model.tools.getProdTypeFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)\\@Model.tools.getModelNameFromSN(Model.ateOutputModel.ateOutput[0].ModelSN)\\@Model.ateOutputModel.serialNum";
            var explorerpath = requestpath.replace("file:///", "");
            while (explorerpath.indexOf("\\") != -1) {
                explorerpath = explorerpath.replace("\\", "/");
            }
        </script>
        <div class="text-center">
            <div class="col-md-2 text-center" style="display: inline-block">
                <div class="row">
                    <button class="btn btn-primary" id="openfolder" style="margin-top: 20px" data-html="true" data-container="body" data-show="bottom" data-placement="right auto" data-trigger="focus" data-content="..." onclick="openfolder()">Open output data file folder</button>
                </div>
            </div>
            <div class="col-md-4 text-center" style="display: inline-block">
                <div class="row">
                    <input class="form-control center-block text-center" id="pathstring" type="text" style="margin-top: 20px" data-html="true" data-container="body" data-show="bottom" data-placement="bottom" data-trigger="focus" data-content="..." value="" readonly>
                </div>
            </div>
        </div>
        <script>
            $.fn.textWidth = function (text, font) {

                if (!$.fn.textWidth.fakeEl) $.fn.textWidth.fakeEl = $('<span>').hide().appendTo(document.body);

                $.fn.textWidth.fakeEl.text(text || this.val() || this.text() || this.attr('placeholder')).css('font', font || this.css('font'));

                return $.fn.textWidth.fakeEl.width();
            };

            $("#pathstring").hide();
            var attemptedOpen = false;
            function openfolder() {
                if (!attemptedOpen) {
                    try {
                        var win = window.open(requestpath);
                    } catch (e) {
                        $("#openfolder").attr('data-content', "Browser could not open window!");
                        $("#openfolder").html("Copy file path instead");
                        $('#openfolder').popover("show");
                        setTimeout(function () {
                            $("#openfolder").popover("destroy");
                        }, 3000);
                        attemptedOpen = true;
                    }
                    if (win != null) {
                        win.close();
                        $("#openfolder").attr('data-content', "Browser could not open window!");
                        $("#openfolder").html("Copy file path instead");
                        $('#openfolder').popover();
                        setTimeout(function () {
                            $("#openfolder").popover("destroy");
                        }, 3000);
                        attemptedOpen = true;
                    }
                } else {
                    $("#pathstring").val(explorerpath);
                    $("#pathstring").css({ width: $("#pathstring").textWidth() });
                    $("#pathstring").fadeIn("fast");
                    $("#pathstring").select();
                    $("#pathstring").attr('size', $("#pathstring").val().length);
                    if (!ClipboardJS.isSupported()) {
                        $("#pathstring").attr('data-content', "Press Ctrl-C");
                    } else {
                        document.execCommand("copy");
                        $("#pathstring").attr('data-content', "Copied!");
                    }
                    setTimeout(function () {
                        $("#pathstring").popover("show");
                    }, 500);
                    setTimeout(function () {
                        $("#pathstring").popover("destroy");
                    }, 5000);
                }
            }
        </script>
    </div>
    <div class="row"><hr /></div>
    <div class="row">
        <div class="col-sm-2"><h4>Audit</h4></div>
        <div class="col-sm-2"><h4>Tube SN</h4></div>
        <div class="col-sm-2"><h4>Tube Name</h4></div>
        <div class="col-sm-2"><h4>Ssa SN</h4></div>
        <div class="col-sm-2"><h4>Lin SN</h4></div>
        <div class="col-sm-2"><h4>Lipa SN</h4></div>
    </div>
    <div class="row">
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].Audit.ToString())</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].TubeSN)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].TubeName)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].SsaSN)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LinSN)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LipaSN)</i></h6></div>
    </div>
    <div class="row">
        <div class="col-sm-2"><h4>Lin Gain</h4></div>
        <div class="col-sm-2"><h4>Lin Gain Offset</h4></div>
        <div class="col-sm-2"><h4>Lin Phase</h4></div>
        <div class="col-sm-2"><h4>Lin Phase Offset</h4></div>
        <div class="col-sm-2"><h4>Lin Mag</h4></div>
        <div class="col-sm-2"><h4>Lin Mag Offset</h4></div>
    </div>
    <div class="row">
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LinGain.ToString())</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LinGainOffset.ToString())</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LinPhase.ToString())</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LinPhaseOffset.ToString())</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LinMag.ToString())</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LinMagOffset.ToString())</i></h6></div>
    </div>
    <div class="row">
        <div class="col-sm-2"><h4>Buc SN</h4></div>
        <div class="col-sm-2"><h4>Bipa SN</h4></div>
        <div class="col-sm-2"><h4>Blipa SN</h4></div>
        <div class="col-sm-2"><h4>Line Voltage</h4></div>
        <div class="col-sm-2"><h4>Line Frequency</h4></div>
    </div>
    <div class="row">
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].BucSN)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].BipaSN)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].BlipaSN)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LineVoltage.ToString())</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].LineFrequency.ToString())</i></h6></div>
    </div>
    <div class="row">
        <div class="col-sm-2"><h4>InputStartFrequency</h4></div>
        <div class="col-sm-2"><h4>InputStopFrequency</h4></div>
        <div class="col-sm-2"><h4>OutputStartFrequency</h4></div>
        <div class="col-sm-2"><h4>OutputStopFrequency</h4></div>
        <div class="col-sm-2"><h4>RatedPower</h4></div>
    </div>
    <div class="row">
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].InputStartFrequency)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].InputStopFrequency)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].OutputStartFrequency)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].OutputStopFrequency)</i></h6></div>
        <div class="col-sm-2"><h6><i>@Model.tools.isNullOrEmpty(Model.ateOutputModel.ateOutput[0].RatedPower)</i></h6></div>
    </div>


    <div class="row">
        <div class="col-sm-12">
            @{
                int counter = 0;
                int numSimilarTests = 0;
                string testName = "";
                var yscroll = 500;

                var tBodyOpen = new HtmlString("<tbody>");
                var tBodyClose = new HtmlString("</tbody>");
                var tableOpen = new HtmlString("<table>");
                var tableClose = new HtmlString("</table>");
                var divOpen = new HtmlString("<div>");
                var divClose = new HtmlString("</div>");
                var paramsExist = new List<bool>() { false, false, false, false, false, false, false, false, false };

                if (Model.ateOutputModel.testResults.Count() > 0)
                {
                    foreach (var item in Model.ateOutputModel.testResults)
                    {
                        numSimilarTests++;

                        if (!testName.Equals(item.TestName))
                        {
                            testName = item.TestName;

                            var testParam = Model.ateOutputModel.testParams.Find(x => x.TestName.Contains(item.TestNameNoDigit));
                            paramsExist = new List<bool>() { false, false, false, false, false, false, false, false, false };

                            if (numSimilarTests < 5) { yscroll = 250; }
                            else { yscroll = 500; }

                            numSimilarTests = 0;

                            //close table"scrollY": false //@yscroll,
                            if (counter > 0)
                            {

                                @tBodyClose
                                @tableClose
                                @divClose

                                <script>

                                    $(document).ready(function () {
                                        $('#table_id_@counter').DataTable({
                                            "bInfo": false,             //hide info at the bootom of the table
                                            "bFilter": false,           //removes search box
                                            "bPaginate": false,         //
                                            "collapse": true,     //collapses table to num of rows
                                            "scrollX": true,
                                            "scrollY": false
                                        });
                                    });
                                </script>

                            }
                            counter++;
                            tableOpen = new HtmlString(String.Format("<table id='table_id_{0}' class='display'>", counter));
                            <hr />

                            <div class="row"><h2 id="@Html.Raw(item.TestName)">@Html.Raw(item.TestName)</h2></div>

                            @divOpen
                            @tableOpen <!--<table id="table_id_" class="display">-->
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => item.ModelSN)</th>
                                    <!--<th>@Html.DisplayNameFor(model => item.StartTime)</th>-->
                                    <th>@Html.DisplayNameFor(model => item.Result)</th>
                                    <th>@Html.DisplayNameFor(model => item.Units)</th>
                                    <th>@Html.DisplayNameFor(model => item.LowLimit)</th>
                                    <th>@Html.DisplayNameFor(model => item.UpLimit)</th>
                                    <th>@Html.DisplayNameFor(model => item.Channel)</th>
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P1).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P1)</th>
                                        paramsExist[0] = true;
                                    }
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P2).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P2)</th>
                                        paramsExist[1] = true;
                                    }
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P3).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P3)</th>
                                        paramsExist[2] = true;
                                    }
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P4).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P4)</th>
                                        paramsExist[3] = true;
                                    }
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P5).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P5)</th>
                                        paramsExist[4] = true;
                                    }
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P6).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P6)</th>
                                        paramsExist[5] = true;
                                    }
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P7).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P7)</th>
                                        paramsExist[6] = true;
                                    }
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P8).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P8)</th>
                                        paramsExist[7] = true;
                                    }
                                    @if (!string.IsNullOrEmpty(@Html.DisplayFor(modelItem => testParam.P9).ToString()))
                                    {
                                        <th>@Html.DisplayFor(modelItem => testParam.P9)</th>
                                        paramsExist[8] = true;
                                    }
                                </tr>
                            </thead>
                            @tBodyOpen
                        }
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.ModelSN)</td>
                            <!--<td>@Html.DisplayFor(modelItem => item.StartTime)</td>-->
                            <td>@Html.DisplayFor(modelItem => item.Result)</td>
                            <td>@Html.DisplayFor(modelItem => item.Units)</td>
                            <td>@Html.DisplayFor(modelItem => item.LowLimit)</td>
                            <td>@Html.DisplayFor(modelItem => item.UpLimit)</td>
                            <td>@Html.DisplayFor(modelItem => item.Channel)</td>
                            @if (paramsExist[0])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P1)</td>
                            }
                            @if (paramsExist[1])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P2)</td>
                            }
                            @if (paramsExist[2])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P3)</td>
                            }
                            @if (paramsExist[3])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P4)</td>
                            }
                            @if (paramsExist[4])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P5)</td>
                            }
                            @if (paramsExist[5])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P6)</td>
                            }
                            @if (paramsExist[6])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P7)</td>
                            }
                            @if (paramsExist[7])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P8)</td>
                            }
                            @if (paramsExist[8])
                            {
                                <td>@Html.DisplayFor(modelItem => item.P9)</td>
                            }
                        </tr>
                    }

                    //close table at the very end

                    @tBodyClose
                    @tableClose
                    @divClose

                    <script>
                        $(document).ready(function () {
                            $('#table_id_@counter').DataTable({
                                "bInfo": false,             //hide info at the bootom of the table
                                "bFilter": false,           //removes search box
                                "bPaginate": false,         //
                                "collapse": true,     //collapses table to num of rows
                                "scrollX": true,
                                "scrollY": false
                            });
                        });

                        //Set navbar button as active
                        document.getElementById("navBarAteOutput").classList.add("active");
                    </script>
                }
            }
        </div>
    </div>
</div>